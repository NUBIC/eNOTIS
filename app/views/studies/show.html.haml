- content_for :head do
  %script{:type => 'text/javascript'}
    $(document).ready(function(){
    $("a[rel=#import]").overlay({expose: { color: '#fff', loadSpeed: 200, opacity: 0.5 }});
    $('#overlay').css({'width': '955px'});
    $("#study-title").tooltip({position: 'bottom left', offset: [0, 955], predelay: 800});  
    });
#study
  = @study.may_accrue? ? "O" : "X"
  = link_to @study.irb_number || "(no id)", "#", :title => "#{@study.status}: #{@study.title}", :class => 'title', :id => 'study-title'
  .tooltip
    .title
      %span.status= "#{@study.status}:"
      %span.title= @study.title
    .details
      %span.phase= "Phase #{@study.phase}" unless @study.phase.blank?
      %span.research_type= "Research Type: #{@study.research_type}" unless @study.phase.blank?
      %span.department= "Department: ..."
      %span.pi
        = "PI: #{@study.pi_first_name} #{@study.pi_last_name}"
        = link_to @study.pi_email, "mailto:#{@study.pi_email}"
      %span.sc
        = "Coord: #{@study.sc_first_name} #{@study.sc_last_name}" 
        = link_to @study.sc_email, "mailto:#{@study.sc_email}"
    .staff
      Staff list&nbsp;
      %span.quiet (as listed in eIRB)
      %ul
        - @study.coordinators.each do |c|        
          %li= "#{c.first_name} #{c.last_name}"

      Recent events
      %ul
        - @study_events.all(:limit => 5).each do |ie|
          %li
            -# ">" before = removes extra spacing around this tag
            %dtr{:title => ie.description}>= ie.term
            = ": #{ie.involvement.subject.name} #{time_ago_in_words(ie.occurred_on || Date.today)} ago"
    .export
      = link_to("Download Subjects", new_report_path(:study => @study),:rel => '#overlay', :class => 'add')
  
  #accrual
    - if @study.subjects.empty?
      = render :partial => "subjects/no_subjects"
    - else
      %table.display
        %thead
          %tr
            %th= "Subjects (#{@study.subjects.size})"
            - %w(prescreened screened consented enrolled randomized withdrawn completed).each do |e|
              %th
                = e.capitalize
                = link_to("( i )", "#", :id => "event_columns") if e == "completed"
        %tbody
          - @study.involvements.each do |involvement|
            %tr{:class => "subject_#{involvement.subject.id}"}
              %td= link_to(involvement.subject.name.blank? ? involvement.case_number :  involvement.subject.name, subject_path(involvement.subject, :study => @study), :rel => 'detail')
              - %w(prescreened screened consented enrolled randomized withdrawn completed).each do |event|
                - x = @study_events.all.detect{|e| e.involvement == involvement && e.event_type.term == event}
                %td= x ? link_to( x.occurred_on, involvement_event_path(x), :title => event.capitalize) : ""
          
    = link_to("+ Add Subject", new_involvement_event_path(:study => @study), :rel => '#overlay', :class => 'add')
    = link_to("[[ ]] Import", "#", :rel => "#import")
  #import.overlay
    .upload
      Import subjects
      - form_tag('/subjects', :multipart => true) do
        = hidden_field_tag("study_id",@study.irb_number.to_s)
        = file_field_tag(:file)
        = submit_tag( "Upload" )
      %br
      %p= "Uploads need a few essential columns (see the #{link_to 'example file', '/documents/sample.csv'}) for eNOTIS to read them."
    - unless @study.study_uploads.blank?
      .uploads
        %table.display
          %thead
            %tr
              %th Importer
              %th Upload Date
              %th Original
              %th Result
              %th Status
          %tbody
            - @study.study_uploads.each do |u|
              %tr
                %td= u.user.netid
                %td= u.created_at
                %td= link_to "View", u.upload.url
                %td= (u.result_file_name.nil?) ? "Unavailable" : link_to( "View", u.result.url)
                %td= u.summary || "Still Processing"
