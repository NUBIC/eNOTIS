#study
  %span.study_title
    = status_icon @study
    = @study.irb_number || "(no id)"
    = link_to image_tag('/images/icons/information.png'), "#", :rel => "#study_information", :class => 'study_information'
  = link_to("Import", "#", :rel => "#import", :class => 'import')
  |
  = link_to("Export subjects", new_report_path(:study => @study), :rel => '#export', :class => 'export-subjects') unless @study.subjects.empty?
  #study_information.overlay
    = render :partial => 'partials/study_info', :locals => {:study => @study}
  #accrual
    #subject_information.overlay
      .contentWrap
    #involvement_information.overlay
      .contentWrap
    #add_involvement.overlay
      .contentWrap
    #add_subject.overlay
      .contentWrap
    #export.overlay
      .contentWrap
    - if @study.subjects.empty?
      %p 
        No subjects yet - watch the video on adding subjects or start adding some.
        %br
        = image_tag '/images/video.jpg'
    - else
      %table.display
        %thead
          %tr
            %th= "Subjects (#{@study.subjects.size})"
            %th MRN
            %th Case #
            %th Birth date
            %th Gender
            %th Ethnicity
            %th Race
            - @events.each do |event|
              %th
                %dtr{:title => event.description}= event.term
        %tbody
          - @study.involvements.each do |involvement|
            %tr{:class => "subject_#{involvement.subject.id}"}
              %td
                = involvement.subject_name_or_case_number
                -# = link_to image_tag('/images/icons/status_offline.png'), "#", :rel => "#subject_information", :class => 'subject'
                -#= render :partial => 'partials/subject', :locals => {:subject => involvement.subject, :involvement => involvement}
              %th= involvement.subject.mrn
              %th= involvement.case_number
              %th= involvement.subject.birth_date.to_s
              %th= involvement.gender
              %th= involvement.ethnicity
              %th= involvement.race_list
              - @events.each do |event|
                - if x = @study_events.detect{|e| e.involvement == involvement && e.event_type == event}
                  %td
                    = link_to( "#{x.occurred_on} #{image_tag '/images/icons/note.png' unless x.note.blank?}", "#", :title => event.term.capitalize, :rel => "#involvement_information", :class => 'involvement')
                    .involvement_information
                      %h4= x.term
                      %p
                        Note:
                        = x.note.blank? ? "(none)" : x.note
                      %p
                        = image_tag('/images/icons/delete.png')
                        = link_to "remove", involvement_event_path(x), :method => :delete
                - else
                  %td= link_to image_tag('/images/icons/add.png'), new_involvement_event_path(:subject => involvement.subject, :study => @study, :event_type_id => event.id), :rel => '#add_involvement', :class => 'add_involvement'

    = link_to("Add Subject", new_involvement_event_path(:study => @study), :rel => '#add_subject', :class => 'add')
  #import.overlay
    .upload
      Import subjects
      - form_tag('/subjects', :multipart => true) do
        = hidden_field_tag("study_id",@study.irb_number.to_s)
        = file_field_tag(:file)
        = submit_tag( "Upload" )
      %br
      %p= "Uploads need a few essential columns (see the #{link_to 'example file', '/documents/sample.csv'}) for eNOTIS to read them."
    - unless @study.study_uploads.blank?
      .uploads
        %table.display
          %thead
            %tr
              %th Importer
              %th Uploaded
              %th Original
              %th Result
              %th Status
          %tbody
            - @study.study_uploads.each do |u|
              %tr
                %td= u.user.netid
                %td
                  %span{:title => u.created_at.to_s(:long)}
                    = time_ago_in_words(u.created_at)
                    ago
                %td= link_to "Original", u.upload.url
                %td= (u.result_file_name.nil?) ? "Unavailable" : link_to("Result", u.result.url)
                %td= u.summary || "Still Processing"
